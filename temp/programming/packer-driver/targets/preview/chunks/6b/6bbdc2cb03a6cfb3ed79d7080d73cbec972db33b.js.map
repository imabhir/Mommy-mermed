{"version":3,"sources":["file:///Users/abhishekrawat/Desktop/ImageSlicerViewer-sliceAnim/assets/Scripts/resourceLoader.ts"],"names":["_decorator","Component","resources","Prefab","instantiate","SpriteFrame","ImageAsset","UITransform","GamePlay","glowing","ccclass","property","resourceLoader","type","inc","img","ImageSlide","result","glowInstantiate","child","prevImage","destroy","active","resetImage","getComponent","setImageforSlice","imageArray","addGlow","nextImage","console","log","length","addSlider","pos","glowPrefab","createWithImage","blink","sprite","getChildByName","maskContent","addChild","setPosition","y","imageRect","_rect","height","width","start","handleStartButtonClick","node","imageSlicer","getImages","loadDir","err","item","setSelectedImage","nextBtn","resetBtn","on","imageI"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, resources, Prefab, instantiate, director, SpriteFrame, Sprite, Texture2D, ImageAsset, SystemEvent, Input, Scene, SceneAsset, Vec3, UITransform, JsonAsset } from \"cc\";\nimport { GamePlay } from \"./GamePlay\";\nimport { glowing } from \"./glowing\";\n\nimport { SingletonClass } from \"./SingleTon\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"resourceLoader\")\nexport class resourceLoader extends Component {\n\n    @property({type   : Prefab})\n    imageSlicer : Prefab = null;\n\n   @property({type: Prefab})\n   imageArray : ImageAsset[] =[];\n   inc : number =0;\n\n   @property({type: Prefab})\n   glowPrefab: Prefab = null;\n\n    img : any = null;\n    ImageSlide : Node = null;\n    result: Boolean = false\n    glowInstantiate:Node=null;\n    child : Node = null;\n    start() {\n        \n       \n        \n    }\n    handleStartButtonClick (){\n\n        console.log(\"hello\");\n        this.child=this.node.getChildByName(\"Node\");  \n        this.addSlider()     \n    }\n    addSlider(){\n        this.result = false\n        this.child.active = false\n        this.ImageSlide = instantiate(this.imageSlicer);\n        this.node.addChild(this.ImageSlide)\n        this.getImages();   \n    }\n    getImages(){\n\n        resources.loadDir('Images', ImageAsset, (err, item) => {\n            if (err) {\n                console.log(\"ERROR IN LOADING\");\n            } else {\n                this.imageArray =item;\n                console.log('Array length',item.length)\n                this.setSelectedImage()\n            }\n        });\n    }\n        setSelectedImage(){\n            let nextBtn = this.ImageSlide.getChildByName('nextImage');\n            let resetBtn = this.ImageSlide.getChildByName('resetImage');\n            let prevImage = this.ImageSlide.getChildByName('prevImage');\n            prevImage.on('click', this.prevImage, this)\n            resetBtn.on('click', this.resetImage,this)\n           nextBtn.on('click',this.nextImage,this);\n            let imageI = SpriteFrame.createWithImage(this.imageArray[this.inc]);\n            console.log(imageI)\n            this.ImageSlide.getComponent(GamePlay).setImageforSlice(this.imageArray[this.inc],this.inc,this.addGlow);\n        }\n        prevImage = () =>{\n            this.ImageSlide.destroy();\n            this.child.active = true\n            this.inc=0\n\n        }\n        resetImage = () => {\n            this.glowInstantiate.destroy();\n           this.ImageSlide.getComponent(GamePlay).setImageforSlice(this.imageArray[this.inc],this.inc,this.addGlow);\n        }\n        nextImage = () =>{\n            console.log(\"Next Image button\")\n            if(this.result){\n                if(this.inc<this.imageArray.length){\n                    ++this.inc\n                    this.ImageSlide.destroy();\n                    this.addSlider();\n                }\n            } else{\n                console.log(\"END OF ARRAY\")\n                \n            }\n        }\n        addGlow = (result : Boolean, pos : Vec3) =>{\n                this.result = result;\n                    this.glowInstantiate = instantiate(this.glowPrefab);\n                    this.img= SpriteFrame.createWithImage(this.imageArray[this.inc])\n                    this.glowInstantiate.getComponent(glowing).blink(this.img)\n                    let sprite = this.glowInstantiate.getChildByName('Item_cat');\n                    let maskContent = this.glowInstantiate.getChildByName('Mask');\n                    this.ImageSlide.addChild(this.glowInstantiate);\n                    this.glowInstantiate.setPosition(0, pos.y, 0);\n                   let imageRect = this.img._rect;\n                    sprite.getComponent(UITransform).height = imageRect.height;\n                    sprite.getComponent(UITransform).width = imageRect.width;\n                    maskContent.getComponent(UITransform).height = imageRect.height;\n                    maskContent.getComponent(UITransform).width = imageRect.width;\n                }\n        }\n"]}