{"version":3,"sources":["file:///Users/abhishekrawat/Desktop/ImageSlicerViewer-sliceAnim/assets/scripts/managers/SoundManager.ts"],"names":["SoundManager","_audioSource","_winSound","_SoundEffectAudioSource","volume","canPlayMusic","canPlaySound","canPlayWinsound","getInstance","_instance","init","audioSource","initWinSound","initSoundEffectAS","playOneShotSoundEffect","clip","playOneShot","console","log","playWinSoundEffect","loop","stopWinMusic","play","playSoundEffect","stopSoundEffect","stop","playMusic","playing","playMusicClip","stopMusic","setMusicVolume","flag","Math","round","localStorage","setItem","toString","setWinMusicVolume","setEffectsVolume","MusicVolume","EffectsVolume","CanPlayMusic","value","pause","CanPlayWinSound","CanPlaySound","setVolumePrefFromLocal","getItem","EffectVolume","CanPlayEffects","winMusic","parseInt","parseFloat"],"mappings":"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","sourcesContent":["import { AudioClip, AudioSource, Vec3 } from \"cc\";\n\nexport class SoundManager {\n    private static _instance: SoundManager = null!;\n    private _audioSource: AudioSource = null!;\n    private _winSound : AudioSource=null;\n    private _SoundEffectAudioSource: AudioSource = null!;\n    private volume: number = 1!;\n\n    private canPlayMusic = true;\n    private canPlaySound = true;\n    private canPlayWinsound=true;\n\n    public static getInstance() {\n        if (!SoundManager._instance) {\n            SoundManager._instance = new SoundManager();\n        }\n        return SoundManager._instance;\n    }\n\n    init(audioSource: AudioSource) {\n        this._audioSource = audioSource;\n    }\n    initWinSound(audioSource:AudioSource){\n        this._winSound=audioSource;\n    }\n\n    initSoundEffectAS(audioSource: AudioSource) {\n        this._SoundEffectAudioSource = audioSource;\n    }\n\n    playOneShotSoundEffect(clip: AudioClip) {\n        if (!this.canPlayMusic) {\n            return;\n        }\n        if (clip) {\n            this._audioSource.playOneShot(clip, 1);\n        } else {\n            console.log(clip, \"Invalid audio clip format\");\n        }\n    } \n    playWinSoundEffect(clip: AudioClip, loop: boolean = false) {\n        if (!this.canPlaySound) {\n            return;\n        }\n        if (clip) {\n            this.stopWinMusic();\n            this._winSound.clip = clip;\n            this._winSound.loop = loop;\n            this._winSound.play();\n        } else {\n            console.log(clip, \"Invalid win sound clip format\");\n        }\n    }\n\n    playSoundEffect(clip: AudioClip, loop: boolean = false) {\n        if (!this.canPlaySound) {\n            return;\n        }\n        if (clip) {\n            this.stopSoundEffect();\n            this._SoundEffectAudioSource.clip = clip;\n            this._SoundEffectAudioSource.loop = loop;\n            this._SoundEffectAudioSource.play();\n        } else {\n            console.log(clip, \"Invalid audio clip format\");\n        }\n    }\n\n    stopSoundEffect() {\n        this._SoundEffectAudioSource.stop();\n    }\n\n    playMusic(loop: boolean) {\n        if (!this.canPlayMusic) {\n            return;\n        }\n        this._audioSource.loop = loop;\n        if (!this._audioSource.playing) {\n            this._audioSource.play();\n        }\n    }\n\n    playMusicClip(clip: AudioClip, loop: boolean) {\n        if (!this.canPlayMusic) {\n            return;\n        }\n        if (clip) {\n            this.stopMusic();\n            this._audioSource.clip = clip;\n            this._audioSource.loop = loop;\n            this._audioSource.play();\n        } else {\n            console.log(clip, \"Invalid audio clip format\");\n        }\n    }\n    stopWinMusic() {\n        this._winSound.stop();\n    }\n    stopMusic() {\n        this._audioSource.stop();\n    }\n\n    setMusicVolume(flag: number) {\n        flag = Math.round(flag * 10) / 10;\n        this._audioSource.volume = flag;\n        localStorage.setItem(\"MusicVolume\", flag.toString());\n    }\n    setWinMusicVolume(flag: number) {\n        flag = Math.round(flag * 10) / 10;\n        this._winSound.volume = flag;\n        localStorage.setItem(\"WinMusicVolume\", flag.toString());\n    }\n\n    setEffectsVolume(flag: number) {\n        flag = Math.round(flag * 10) / 10;\n        this._SoundEffectAudioSource.volume = flag;\n        localStorage.setItem(\"EffectVolume\", flag.toString());\n    }\n\n    get MusicVolume() {\n        return this._audioSource.volume;\n    }\n\n    get EffectsVolume() {\n        return this._SoundEffectAudioSource.volume;\n    }\n    get CanPlayMusic(): boolean {\n            return this.canPlayMusic;\n        }\n\n    set CanPlayMusic(value: boolean) {\n        if (value) {\n            this._audioSource.play();\n        } else {\n            this._audioSource.pause();\n        }\n        localStorage.setItem(\"CanPlayMusic\", value.toString());\n        this.canPlayMusic = value;\n    }\n\n    \n    set CanPlayWinSound(value: boolean) {\n        if (value) {\n            this._winSound.play();\n        } else {\n            this._winSound.stop();\n        }\n        localStorage.setItem(\"CanPlayEffects\", value.toString());\n        this.canPlaySound = value;\n    }\n    set CanPlaySound(value: boolean) {\n        if (value) {\n            this._SoundEffectAudioSource.play();\n        } else {\n            this._SoundEffectAudioSource.stop();\n        }\n        localStorage.setItem(\"CanPlayEffects\", value.toString());\n        this.canPlaySound = value;\n    }\n    get CanPlayWinSound(): boolean {\n        return this.canPlaySound;\n    }\n    get CanPlaySound(): boolean {\n        return this.canPlaySound;\n    }\n\n    setVolumePrefFromLocal() {\n        let MusicVolume: string = localStorage.getItem(\"MusicVolume\");\n        let EffectVolume: string = localStorage.getItem(\"EffectVolume\");\n        let CanPlayMusic: string = localStorage.getItem(\"CanPlayMusic\");\n        let CanPlayEffects: string = localStorage.getItem(\"CanPlayEffects\");\n        let winMusic:string=localStorage.getItem(\"WinMusicVolume\");\n        if(winMusic){\n            this.setWinMusicVolume(parseInt(winMusic));\n            \n        }\n\n        if (MusicVolume) {\n            this.setMusicVolume(parseFloat(MusicVolume));\n            console.log(\"MusicVolume: \", parseFloat(MusicVolume));\n        }\n        if (EffectVolume) {\n            this.setEffectsVolume(parseFloat(EffectVolume));\n            console.log(\"EffectVolume: \", parseFloat(EffectVolume));\n        }\n        if (CanPlayMusic) {\n            this.CanPlayMusic = CanPlayMusic === \"true\";\n            console.log(\"CanPlayMusic: \", this.CanPlayMusic);\n        }\n        if (CanPlayEffects) {\n            this.CanPlaySound = CanPlayEffects === \"true\";\n            console.log(\"CanPlayEffects: \", this.CanPlaySound);\n        }\n    }\n}\n"]}