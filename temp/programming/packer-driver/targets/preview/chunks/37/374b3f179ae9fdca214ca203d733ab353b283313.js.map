{"version":3,"sources":["file:///Users/abhishekrawat/Desktop/ImageSlicerViewer-sliceAnim/assets/Scripts/resourceLoader.ts"],"names":["_decorator","Component","resources","Prefab","instantiate","SpriteFrame","ImageAsset","UITransform","GamePlay","glowing","ccclass","property","resourceLoader","type","inc","img","ImageSlide","result","glowInstantiate","child","settingOpen","setting","settingMenu","node","addChild","prevImage","destroy","active","resetImage","getComponent","setImageforSlice","imageArray","addGlow","nextImage","console","log","length","addSlider","pos","glowPrefab","createWithImage","blink","sprite","getChildByName","maskContent","setPosition","y","imageRect","_rect","height","width","start","handleStartButtonClick","imageSlicer","getImages","loadDir","err","item","setSelectedImage","nextBtn","resetBtn","on","imageI"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, resources, Prefab, instantiate, director, SpriteFrame, Sprite, Texture2D, ImageAsset, SystemEvent, Input, Scene, SceneAsset, Vec3, UITransform, JsonAsset } from \"cc\";\nimport { GamePlay } from \"./GamePlay\";\nimport { glowing } from \"./glowing\";\n\nimport { SingletonClass } from \"./SingleTon\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"resourceLoader\")\nexport class resourceLoader extends Component {\n\n    @property({type   : Prefab})\n    imageSlicer : Prefab = null;\n    @property({type   : Prefab})\n    settingMenu : Prefab = null;\n\n   @property({type: Prefab})\n   imageArray : ImageAsset[] =[];\n   inc : number =0;\n\n   @property({type: Prefab})\n   glowPrefab: Prefab = null;\n\n    img : any = null;\n    ImageSlide : Node = null;\n    result: Boolean = false\n    glowInstantiate:Node=null;\n    child : Node = null;\n    start() {\n        \n       \n        \n    }\n    handleStartButtonClick (){\n\n        console.log(\"hello\");\n        this.child=this.node.getChildByName(\"Node\");  \n        this.addSlider()     \n    }\n    addSlider(){\n        this.result = false\n        this.child.active = false\n        this.ImageSlide = instantiate(this.imageSlicer);\n        this.node.addChild(this.ImageSlide)\n        this.getImages();   \n    }\n    getImages(){\n\n        resources.loadDir('Images', ImageAsset, (err, item) => {\n            if (err) {\n                console.log(\"ERROR IN LOADING\");\n            } else {\n                this.imageArray =item;\n                console.log('Array length',item.length)\n                this.setSelectedImage()\n            }\n        });\n    }\n        setSelectedImage(){\n            let nextBtn = this.ImageSlide.getChildByName('nextImage');\n            let resetBtn = this.ImageSlide.getChildByName('resetImage');\n            let prevImage = this.ImageSlide.getChildByName('prevImage');\n            let setting=this.ImageSlide.getChildByName('settings');\n            setting.on('click',this.settingOpen,this);\n            prevImage.on('click', this.prevImage, this)\n            resetBtn.on('click', this.resetImage,this)\n           nextBtn.on('click',this.nextImage,this);\n            let imageI = SpriteFrame.createWithImage(this.imageArray[this.inc]);\n            console.log(imageI)\n            this.ImageSlide.getComponent(GamePlay).setImageforSlice(this.imageArray[this.inc],this.inc,this.addGlow);\n        }\n        settingOpen=()=>{\n            let setting=instantiate(this.settingMenu);\n            this.node.addChild(setting);\n        }\n        prevImage = () =>{\n            this.ImageSlide.destroy();\n            this.child.active = true\n            this.inc=0\n\n        }\n        resetImage = () => {\n            this.glowInstantiate.destroy();\n           this.ImageSlide.getComponent(GamePlay).setImageforSlice(this.imageArray[this.inc],this.inc,this.addGlow);\n        }\n        nextImage = () =>{\n            console.log(\"Next Image button\")\n            if(this.result){\n                if(this.inc<this.imageArray.length){\n                    ++this.inc\n                    this.ImageSlide.destroy();\n                    this.addSlider();\n                }\n            } else{\n                console.log(\"END OF ARRAY\")\n                \n            }\n        }\n        addGlow = (result : Boolean, pos : Vec3) =>{\n                this.result = result;\n                    this.glowInstantiate = instantiate(this.glowPrefab);\n                    this.img= SpriteFrame.createWithImage(this.imageArray[this.inc])\n                    this.glowInstantiate.getComponent(glowing).blink(this.img)\n                    let sprite = this.glowInstantiate.getChildByName('Item_cat');\n                    let maskContent = this.glowInstantiate.getChildByName('Mask');\n                    this.ImageSlide.addChild(this.glowInstantiate);\n                    this.glowInstantiate.setPosition(0, pos.y, 0);\n                   let imageRect = this.img._rect;\n                    sprite.getComponent(UITransform).height = imageRect.height;\n                    sprite.getComponent(UITransform).width = imageRect.width;\n                    maskContent.getComponent(UITransform).height = imageRect.height;\n                    maskContent.getComponent(UITransform).width = imageRect.width;\n                }\n        }\n"]}