{"version":3,"sources":["file:///Users/abhishekrawat/Desktop/ImageSlicerViewer-sliceAnim/assets/scripts/Managers/ResourceUtils.ts"],"names":["_decorator","Component","resources","error","ccclass","ResourceUtils","_musicFiles","_gameResource","start","getInstance","_instance","musicFiles","Promise","resolve","reject","length","loadDir","err","data","console","log","getMusicFile","name","clip","find"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,S,OAAAA,S;AAAqCC,MAAAA,K,OAAAA,K;;;;;;;;;OAE/D;AAAEC,QAAAA;AAAF,O,GAAcJ,U;;+BAIPK,a,WADZD,OAAO,CAAC,eAAD,C,2BAAR,MACaC,aADb,SACmCJ,SADnC,CAC6C;AAAA;AAAA;AAAA,eACzCK,WADyC,GACd,EADc;AAAA,eAEzCC,aAFyC,GAEJ,EAFI;AAAA;;AAKzCC,QAAAA,KAAK,GAAG,CAAE;;AAEe,eAAXC,WAAW,GAAG;AACxB,cAAI,CAACJ,aAAa,CAACK,SAAnB,EAA8B;AAC1BL,YAAAA,aAAa,CAACK,SAAd,GAA0B,IAAIL,aAAJ,EAA1B;AACH;;AACD,iBAAOA,aAAa,CAACK,SAArB;AACH;;AAIMC,QAAAA,UAAU,GAAG;AAChB,iBAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,gBAAI,KAAKR,WAAL,CAAiBS,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BF,cAAAA,OAAO,CAAC,KAAKP,WAAN,CAAP;AACH,aAFD,MAEO;AACHJ,cAAAA,SAAS,CAACc,OAAV,CAAmB,OAAnB,EAA2B,CAACC,GAAD,EAAoBC,IAApB,KAA0C;AACjE,oBAAID,GAAJ,EAAS;AACLE,kBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEAN,kBAAAA,MAAM,CAACG,GAAD,CAAN;AACAd,kBAAAA,KAAK,CAAC,uBAAuBc,GAAxB,CAAL;AACH,iBALD,MAKO;AACHE,kBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,IAAvB;AAEA,uBAAKZ,WAAL,GAAmBY,IAAnB;AACH;;AACDL,gBAAAA,OAAO,CAAC,KAAKP,WAAN,CAAP;AACH,eAZD;AAaH;AACJ,WAlBM,CAAP;AAmBH;;AAEMe,QAAAA,YAAY,CAACC,IAAD,EAAwB;AACvC,cAAI,KAAKhB,WAAT,EAAsB;AAClB,gBAAIiB,IAAI,GAAG,KAAKjB,WAAL,CAAiBkB,IAAjB,CAAuBD,IAAD,IAAUA,IAAI,CAACD,IAAL,IAAaA,IAA7C,CAAX;;AACA,mBAAOC,IAAI,IAAI,IAAf;AACH;AACJ;;AA3CwC,O,UAG3Bb,S","sourcesContent":["import { _decorator, Component, resources, Asset, Prefab, AudioClip, error, VideoClip, SpriteFrame } from \"cc\";\n\nconst { ccclass } = _decorator;\n\n\n@ccclass(\"ResourceUtils\")\nexport class ResourceUtils extends Component {\n    _musicFiles: AudioClip[] = [];\n    _gameResource: Record<string, any> = {};\n    public static _instance: ResourceUtils;\n\n    start() {}\n\n    public static getInstance() {\n        if (!ResourceUtils._instance) {\n            ResourceUtils._instance = new ResourceUtils();\n        }\n        return ResourceUtils._instance;\n    }\n\n    \n\n    public musicFiles() {\n        return new Promise((resolve, reject) => {\n            if (this._musicFiles.length > 0) {\n                resolve(this._musicFiles);\n            } else {\n                resources.loadDir(`audio`, (err: Error | null, data: AudioClip[]) => {\n                    if (err) {\n                        console.log(\"ERROR\");\n                        \n                        reject(err);\n                        error(\"load audio files :\" + err);\n                    } else {\n                        console.log(\"LOADED: \",data);\n\n                        this._musicFiles = data;\n                    }\n                    resolve(this._musicFiles);\n                });\n            }\n        });\n    }\n\n    public getMusicFile(name: string):AudioClip{\n        if (this._musicFiles) {\n            let clip = this._musicFiles.find((clip) => clip.name == name);\n            return clip || null;\n        }\n    }\n}\n"]}