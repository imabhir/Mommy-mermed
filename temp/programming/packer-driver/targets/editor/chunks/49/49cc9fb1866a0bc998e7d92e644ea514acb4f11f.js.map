{"version":3,"sources":["file:///Users/abhishekrawat/Documents/Git/Mommy-mermed/assets/scripts/imageLoad.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","SpriteFrame","UITransform","FitSprite","ccclass","property","imageLoad","type","_flag","_image","selectedCallback","sliceImages","start","show","items","callback","forEach","item","Index","itemInstantiate","image","sprite","createWithImage","console","log","getComponent","height","fitImage","name","on","EventType","TOUCH_END","getSelected","contentNode","addChild","event","asset","target","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,W,OAAAA,W;AAAqBC,MAAAA,W,OAAAA,W;;AACvEC,MAAAA,S,iBAAAA,S;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;2BAGjBU,S,WADZF,OAAO,CAAC,WAAD,C,UAEHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAER;AAAR,OAAD,C,UAGRM,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAET;AAAR,OAAD,C,2BALb,MACaQ,SADb,SAC+BT,SAD/B,CACyC;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAOrCW,KAPqC,GAOnB,KAPmB;AAAA,eAQrCC,MARqC,GAQtB,IARsB;AAAA,eASrCC,gBATqC,GASZ,IATY;AAAA,eAWrCC,WAXqC,GAWR,EAXQ;AAAA;;AAarCC,QAAAA,KAAK,GAAG,CAAE;;AACVC,QAAAA,IAAI,CAACC,KAAD,EAAuBC,QAAvB,EAAiC;AACjC,eAAKL,gBAAL,GAAwBK,QAAxB;AACA,eAAKJ,WAAL,GAAmBG,KAAnB;AACAA,UAAAA,KAAK,CAACE,OAAN,CAAc,CAACC,IAAD,EAAMC,KAAN,KAAgB;AAC1B,gBAAIC,eAAe,GAAGnB,WAAW,CAAC,KAAKoB,KAAN,CAAjC;AACA,gBAAIC,MAAM,GAAGpB,WAAW,CAACqB,eAAZ,CAA4BL,IAA5B,CAAb;AAEAM,YAAAA,OAAO,CAACC,GAAR,CAAYL,eAAe,CAACM,YAAhB,CAA6BvB,WAA7B,EAA0CwB,MAAtD;AAEAP,YAAAA,eAAe,CAACM,YAAhB;AAAA;AAAA,wCAAwCE,QAAxC,CAAiDN,MAAjD;AACAF,YAAAA,eAAe,CAACS,IAAhB,GAAwB,GAAEV,KAAM,EAAhC;AAEAC,YAAAA,eAAe,CAACU,EAAhB,CAAmB/B,IAAI,CAACgC,SAAL,CAAeC,SAAlC,EAA4C,KAAKC,WAAjD,EAA6D,IAA7D;AACA,iBAAKC,WAAL,CAAiBC,QAAjB,CAA0Bf,eAA1B;AACH,WAXD;AAYH;;AAEDa,QAAAA,WAAW,CAACG,KAAD,EAAa;AAEpB,cAAIC,KAAkB,GAAG,KAAKzB,WAAL,CAAiBwB,KAAK,CAACE,MAAN,CAAaT,IAA9B,CAAzB;AAEA,eAAKlB,gBAAL,CAAsB0B,KAAtB;AACH;;AACDE,QAAAA,MAAM,CAACC,SAAD,EAAoB,CACzB;;AAtCoC,O;;;;;iBAErB,I;;;;;;;iBAGI,I","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, SpriteFrame, Sprite, UITransform, EventMouse, ImageAsset, Texture2D, assetManager } from \"cc\";\nimport { FitSprite } from \"./fitSprite\";\nimport { resourceLoader } from \"./resourceLoader\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"imageLoad\")\nexport class imageLoad extends Component {\n    @property({ type: Prefab })\n    image: Prefab = null!;\n\n    @property({ type: Node })\n    contentNode: Node = null;\n\n    _flag : Boolean = false;\n    _image : any = null;\n    selectedCallback : any = null;\n\n    sliceImages : ImageAsset[] = [];\n\n    start() {}\n    show(items: ImageAsset[] , callback) {\n        this.selectedCallback = callback;\n        this.sliceImages = items;\n        items.forEach((item,Index) => {\n            let itemInstantiate = instantiate(this.image);\n            let sprite = SpriteFrame.createWithImage(item);\n            \n            console.log(itemInstantiate.getComponent(UITransform).height);\n            \n            itemInstantiate.getComponent(FitSprite).fitImage(sprite);\n            itemInstantiate.name = `${Index}`\n            \n            itemInstantiate.on(Node.EventType.TOUCH_END,this.getSelected,this)\n            this.contentNode.addChild(itemInstantiate);\n        });\n    }\n   \n    getSelected(event : any){\n\n        let asset : ImageAsset = this.sliceImages[event.target.name]\n      \n        this.selectedCallback(asset);\n    }\n    update(deltaTime: number) {\n    }\n}\n"]}