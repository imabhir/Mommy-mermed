{"version":3,"sources":["file:///Users/abhishekrawat/Desktop/ImageSlicerViewer-sliceAnim/assets/Scripts/Managers/SoundManager.ts"],"names":["SoundManager","_audioSource","_SoundEffectAudioSource","volume","canPlayMusic","canPlaySound","getInstance","_instance","init","audioSource","initSoundEffectAS","playOneShotSoundEffect","clip","playOneShot","console","log","playSoundEffect","loop","stopSoundEffect","play","stop","playMusic","playing","playMusicClip","stopMusic","setMusicVolume","flag","Math","round","localStorage","setItem","toString","setEffectsVolume","MusicVolume","EffectsVolume","CanPlayMusic","value","pause","CanPlaySound","setVolumePrefFromLocal","getItem","EffectVolume","CanPlayEffects","parseFloat"],"mappings":"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","sourcesContent":["import { AudioClip, AudioSource, Vec3 } from \"cc\";\n\nexport class SoundManager {\n    private static _instance: SoundManager = null!;\n    private _audioSource: AudioSource = null!;\n    private _SoundEffectAudioSource: AudioSource = null!;\n    private volume: number = 1!;\n\n    private canPlayMusic = true;\n    private canPlaySound = true;\n\n    public static getInstance() {\n        if (!SoundManager._instance) {\n            SoundManager._instance = new SoundManager();\n        }\n        return SoundManager._instance;\n    }\n\n    init(audioSource: AudioSource) {\n        this._audioSource = audioSource;\n    }\n\n    initSoundEffectAS(audioSource: AudioSource) {\n        this._SoundEffectAudioSource = audioSource;\n    }\n\n    playOneShotSoundEffect(clip: AudioClip) {\n        if (!this.canPlayMusic) {\n            return;\n        }\n        if (clip) {\n            this._audioSource.playOneShot(clip, 1);\n        } else {\n            console.log(clip, \"Invalid audio clip format\");\n        }\n    }\n\n    playSoundEffect(clip: AudioClip, loop: boolean = false) {\n        if (!this.canPlaySound) {\n            return;\n        }\n        if (clip) {\n            this.stopSoundEffect();\n            this._SoundEffectAudioSource.clip = clip;\n            this._SoundEffectAudioSource.loop = loop;\n            this._SoundEffectAudioSource.play();\n        } else {\n            console.log(clip, \"Invalid audio clip format\");\n        }\n    }\n\n    stopSoundEffect() {\n        this._SoundEffectAudioSource.stop();\n    }\n\n    playMusic(loop: boolean) {\n        if (!this.canPlayMusic) {\n            return;\n        }\n        this._audioSource.loop = loop;\n        if (!this._audioSource.playing) {\n            this._audioSource.play();\n        }\n    }\n\n    playMusicClip(clip: AudioClip, loop: boolean) {\n        if (!this.canPlayMusic) {\n            return;\n        }\n        if (clip) {\n            this.stopMusic();\n            this._audioSource.clip = clip;\n            this._audioSource.loop = loop;\n            this._audioSource.play();\n        } else {\n            console.log(clip, \"Invalid audio clip format\");\n        }\n    }\n\n    stopMusic() {\n        this._audioSource.stop();\n    }\n\n    setMusicVolume(flag: number) {\n        flag = Math.round(flag * 10) / 10;\n        this._audioSource.volume = flag;\n        localStorage.setItem(\"MusicVolume\", flag.toString());\n    }\n\n    setEffectsVolume(flag: number) {\n        flag = Math.round(flag * 10) / 10;\n        this._SoundEffectAudioSource.volume = flag;\n        localStorage.setItem(\"EffectVolume\", flag.toString());\n    }\n\n    get MusicVolume() {\n        return this._audioSource.volume;\n    }\n\n    get EffectsVolume() {\n        return this._SoundEffectAudioSource.volume;\n    }\n\n    set CanPlayMusic(value: boolean) {\n        if (value) {\n            this._audioSource.play();\n        } else {\n            this._audioSource.pause();\n        }\n        localStorage.setItem(\"CanPlayMusic\", value.toString());\n        this.canPlayMusic = value;\n    }\n\n    get CanPlayMusic(): boolean {\n        return this.canPlayMusic;\n    }\n\n    set CanPlaySound(value: boolean) {\n        if (value) {\n            // this._SoundEffectAudioSource.play();\n        } else {\n            this._SoundEffectAudioSource.stop();\n        }\n        localStorage.setItem(\"CanPlayEffects\", value.toString());\n        this.canPlaySound = value;\n    }\n\n    get CanPlaySound(): boolean {\n        return this.canPlaySound;\n    }\n\n    setVolumePrefFromLocal() {\n        let MusicVolume: string = localStorage.getItem(\"MusicVolume\");\n        let EffectVolume: string = localStorage.getItem(\"EffectVolume\");\n        let CanPlayMusic: string = localStorage.getItem(\"CanPlayMusic\");\n        let CanPlayEffects: string = localStorage.getItem(\"CanPlayEffects\");\n\n        if (MusicVolume) {\n            this.setMusicVolume(parseFloat(MusicVolume));\n            console.log(\"MusicVolume: \", parseFloat(MusicVolume));\n        }\n        if (EffectVolume) {\n            this.setEffectsVolume(parseFloat(EffectVolume));\n            console.log(\"EffectVolume: \", parseFloat(EffectVolume));\n        }\n        if (CanPlayMusic) {\n            this.CanPlayMusic = CanPlayMusic === \"true\";\n            console.log(\"CanPlayMusic: \", this.CanPlayMusic);\n        }\n        if (CanPlayEffects) {\n            this.CanPlaySound = CanPlayEffects === \"true\";\n            console.log(\"CanPlayEffects: \", this.CanPlaySound);\n        }\n    }\n}\n"]}